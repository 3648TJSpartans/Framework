Create generic tank drive subsystem & commands (and swerve)
Create generic velocity/position motor(s) subsystem & commands. Link to encoder? SetPower. Toggle. Coast/break? Hold (with off), Level(s) of speed/position. Analog input. Inverse input
create generic motor(s) power subsystem & commands. Set Power. Toggle. Coast/break? Hold (with off), Level(s) of power. Analog input. Inverse input
Create generic solenoid(s) subsystem & commands. Set state. Toggle. Hold (with default) Inverse input.
All subsystems should support reloading of config. Config reload should be a command. 

Create Pid util class
Create motor util with configs such as pid, power/speed limit, etc.
Create controller util class. button debounce, deadband, linear/
create logging class. Time/mode/+otherstuff.

create generic commnds (if needed) such as wait?

integrate shuffleboard into the framework for easy of testing and for in game changes
failsafe for sensors solienoid and motors might need testing



old?
-------------

Small-

*check solenoid files for both single and double
add a ramp up state for the shooter
*redo framework documentation for both in and out
*fix varible naming of framework to match xml naming conventions ie
ControllerType = <controller type="LOGITECH">
*look/update at spark max controller file 
*add xbox controller 
*add ps5 controller
failsafe for sensors solienoid and motors might need testing

medium- 
make a compressor wrapper and base in out
*fix the turret for casper

big-
*configure a system that takes in a unknown number of controll files.
*configure a system that takes in a unkown number of subsytem files.
read scotts email and/or start on behaviors
*add sensor output to the framework
*shufflebaord disabling system
integrate shuffleboard into the framework for easy of testing and for in game changes
potientially integrate machine learning into the vision
go over the encoders and double check they work
